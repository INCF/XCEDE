<?xml version="1.0" encoding="UTF-8"?>
<chapter id="chapter.structure">
  <title>Structure and Conventions</title>

  <section>
    <title>The XCEDE 2 Dataset</title>

    <para>An XCEDE 2 Dataset is a data repository (stored in files, databases, or using other storage mechanisms) that can be represented as a collection of one or more XML documents, each of which validates against the XCEDE 2 XML schema (<xref linkend="appendix.schema"/>).  The XCEDE 2 specification does not prescribe any particular mechanism by which these documents are located, stored, grouped, or linked, though XCEDE 2 allows certain XML elements to link to other target elements and to optionally specify URLs as hints as to the location of the documents containing these targets.</para>
    <para>For example, a given XCEDE 2 dataset may be stored as a single XML document, or a collection of files in a single directory on a file system, or may be distributed within a hierarchical directory structure (which may or may not reflect the structure of the data within), or may be stored within a database accessible by query through a web interface.  The semantics of the dataset should be fully reflected in the XML representation, and should not be dependent on how the dataset is stored.</para>
    <para>A schema-compliant XCEDE 2 document must be a valid XML 1.0 document <citation>XML10</citation>, and must have one root element, <literal>&lt;XCEDE&gt;</literal>, which (like all other XCEDE 2 elements) is in the XML namespace <literal>http://www.xcede.org/xcede-2</literal>.</para>
    <para>Several major components of the XCEDE 2 dataset are represented as children of the XCEDE root element.  These components include:</para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title>Experiment hierarchy</title>
          <para>The components in the experiment hierarchy are represented by elements <literal>&lt;project&gt;</literal>, <literal>&lt;subject&gt;</literal>, <literal>&lt;visit&gt;</literal>, <literal>&lt;study&gt;</literal>, <literal>&lt;episode&gt;</literal>, <literal>&lt;acquisition&gt;</literal>.  These are described in more detail in <xref linkend="chapter.hierarchy"/>.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Analyses</title>
          <para>The <literal>&lt;analysis&gt;</literal> element encapsulates metadata about data that is derived from one or more inputs, whose data is represented by other XCEDE elements.  See <xref linkend="chapter.analysis"/>.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Protocols</title>
          <para>Structures to describe the expected course of an experimental paradigm are provided by the <literal>&lt;protocol&gt;</literal> element.  See <xref linkend="chapter.protocol"/>.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Data resources</title>
          <para>Represented by the element <literal>&lt;resource&gt;</literal>, these point to external files which store actual data.  See <xref linkend="chapter.binary_data_resource"/>.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Data</title>
          <para>The element <literal>&lt;data&gt;</literal> is used to store actual data within the XML document.  Examples include <emphasis>events</emphasis> (<xref linkend="chapter.events"/>) and <emphasis>assessments</emphasis> (<xref linkend="chapter.assessment"/>).</para>
        </formalpara>
      </listitem>
    </itemizedlist>
    <para>Other XCEDE components appear as subcomponents of other XCEDE structures:</para>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title>Data provenance</title>
          <para>The <literal>&lt;provenance&gt;</literal> element appears in the types <literal>analysis_t</literal> (on which the <literal>&lt;analysis&gt;</literal> element is based) and <literal>dataResource_t</literal> (one of the available data models for the top-level <literal>&lt;resource&gt;</literal> element).  See <xref linkend="chapter.provenance"/>.</para>
        </formalpara>
      </listitem>
    </itemizedlist>
    <itemizedlist>
      <listitem>
        <formalpara>
          <title>Comments and annotations</title>
          <para>The <literal>&lt;commentList&gt;</literal> and <literal>&lt;annotationList&gt;</literal> provide a mechanism to store descriptive text regarding the real-world entities or concepts represented by the associated XML element, or about the stored XML element itself.  These are available in all elements based on <literal>abstract_container_t</literal>, which includes all the hierarchy elements and <literal>&lt;analysis&gt;</literal>.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Informational resources</title>
          <para>These point to documentation that may illuminate aspects of the data, data collection, protocol, etc. -- these might include peer-reviewed publications, equipment manuals, and others.  Informational resources are represented in the type <literal>informationResource_t</literal> which is used in the <literal>&lt;resourceList&gt;</literal> element in <literal>abstract_container_t</literal> (as with the comments and annotations).</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Terminology</title>
          <para>Various elements in XCEDE 2 include the attribute group <literal>terminology_ag</literal> or use the type <literal>terminologyString</literal>, which allow the user to associate them with terms from particular nomenclatures/ontologies.  For example, a subject's <literal>&lt;species&gt;</literal> may refer to a standard term listed in a well-known public nomenclature.</para>
        </formalpara>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>XCEDE 2 Schema conventions</title>

    <para>The XCEDE XML document structure is defined using W3C XML Schema language <citation>XMLSchema10</citation>.  With a few exceptions, the XCEDE 2 XML schema subscribes to the following conventions and best practices.</para>

    <formalpara>
      <title>Naming and capitalization</title>
    </formalpara>
    <itemizedlist>
      <listitem>
        <para>Element and attribute names are alphanumeric (<literal>&lt;project&gt;</literal>).  All letters are lowercase, with the exception of acronyms, which are uppercase (<literal>&lt;XCEDE&gt;</literal>, <literal>projectID</literal>), and, in multi-word names, the initial letters of the second and following words which are capitalized (<literal>&lt;dataResourceRef&gt;</literal>).  For the purposes of this rule, <literal>ID</literal> (for "identifier") is considered an acronym.</para>
      </listitem>
      <listitem>
        <para>Schema type names (which do not appear in XML instance documents except in <literal>xsi:type</literal> attributes) follow the same naming conventions as element and attribute names, but have the <literal>_t</literal> suffix (<literal>analysis_t</literal>).  If the type is "abstract", then it has an <literal>abstract_</literal> prefix (<literal>abstract_container_t</literal>).</para>
      </listitem>
      <listitem>
        <para>Attribute group names (which do not appear in XML instance documents) follow the same naming conventions as element and attribute names, but have the <literal>_ag</literal> suffix (<literal>allLevelExternalIDs_ag</literal>).</para>
      </listitem>
    </itemizedlist>

    <formalpara>
      <title>Schema best practices</title>
    </formalpara>
    <itemizedlist>
      <listitem>
        <para>Follow the schema versioning best practices recommended by Roger Costello in <citation>CostelloSchemaVersioning</citation>.  Some of the implications are listed below:</para>
        <itemizedlist>
          <listitem>
            <para>The XCEDE namespace will change for major versions, but not minor versions. So, the namespace is as follows: <literal>http://www.xcede.org/xcede-major_version</literal>. For example: <literal>http://www.xcede.org/xcede-2</literal></para>
          </listitem>
          <listitem>
            <para>XSD files will be named <literal>xcede-<emphasis>version</emphasis>-<emphasis>domain</emphasis></literal>. For example: <literal>xcede-2.0-core.xsd</literal></para>
          </listitem>
          <listitem>
            <para>All elements should have a corresponding named <literal>complexType</literal>. For example: <literal>&lt;project&gt;</literal> is of type <literal>project_t</literal>.</para>
          </listitem>
          <listitem>
            <para>The schema prescribes a particular document order for some elements -- document creators should follow this strictly.  However, applications should be written without expecting a particular element order, in case later versions of the schema change the order of elements.  That is, be conservative in what you write, but liberal in what you accept.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <para>Content within XCEDE documents is expected to be validated using other content-based schema languages, such as Schematron <citation>Schematron</citation>.</para>
  </section>
</chapter>
